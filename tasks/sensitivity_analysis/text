# def sensitivity_analyse(filepath_folder: list, low, high):
#     # 1. 获取模拟卫星辐射数据
#     base_radiance = None
#     diff_list = []
#     for file_path in filepath_folder:
#         if base_radiance is None:
#             # 获取初始辐射值作为基准
#             wvls, base_radiance = gf.get_simulated_satellite_radiance(
#                 file_path, satellite_channels, low, high
#             )
#             continue
#         # 2. 读取文件
#         _, radiance_data = gf.get_simulated_satellite_radiance(
#             file_path, satellite_channels, low, high
#         )
#         # 计算相对差异
#         diff = (radiance_data - base_radiance) / base_radiance
#         diff_list.append(diff)

#     # 3. 计算全局最大最小值，用于所有差异的归一化
#     all_diffs = np.concatenate(diff_list, axis=0)
#     global_min = np.min(all_diffs)
#     global_max = np.max(all_diffs)

#     # 4. 对所有差异进行统一归一化
#     standardized_diff_list = [
#         max_min_standardization(diff, global_min, global_max) for diff in diff_list
#     ]

#     return wvls, diff_list, standardized_diff_list


# def max_min_standardization(data: np.ndarray, global_min: float, global_max: float):
#     """根据全局最小值和最大值对数据进行标准化"""
#     return (data - global_min) / (global_max - global_min)