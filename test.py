"""该代码用于进行快速的 语法测试 和 函数与方法测试 """from osgeo import gdalimport numpy as npimport xarray as xrimport osimport shutilimport mathprint(-0.006683632511398718*64000)# file_path = r"I:\EMIT\methane_result\direct\EMIT_L1B_RAD_001_20230725T113904_2320608_034.nc"# ds = xr.open_dataset(file_path)# methane = ds['methane_enhancement'].values# lon_data = ds['lon'].values# lat_data = ds['lat'].values# nan_value = -9999  # 要设置为 NaN 数据的值# methane[methane == nan_value] = np.nan## height, width = methane.shape  # 假设变量维度是 (time, lat, lon)# out_tif = "I:\EMIT\methane_result\EMIT_L1B_RAD_001_20230725T113904_2320608_034_1.tif"## driver = gdal.GetDriverByName("GTiff")# out_ds = driver.Create(out_tif, width, height, 1, gdal.GDT_Float32)  # 单波段浮点型 TIFF## # 设置地理变换信息# out_ds.SetGeoTransform((lon_data.min(), (lon_data.max() - lon_data.min()) / lon_data.shape[0], 0, lat_data.max(), 0, (lat_data.min() - lat_data.max()) / lat_data.shape[0]))## # 设置地理变换信息（如有可能）# #out_ds.SetGeoTransform(ds.geotransform)  # 假设 NC 文件含有地理变换信息# # out_ds.SetProjection(ds.projection)  # 假设 NC 文件含有投影信息## # 写入数据# out_band = out_ds.GetRasterBand(1)# out_band.WriteArray(methane)# out_band.SetNoDataValue(nan_value)## # 清理# out_band = None# out_ds = None# Read the text file